@page "/contact"
<style>
    .button {
    margin: 2px;
        border-radius: 37px ;
        color: @mycolor !important;
        background-color: transparent;
        appearance: none;
        transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, color 0.2s ease-in-out;
        border: 0;
        cursor: pointer;
        display: inline-block;
        font-family: "Source Sans Pro", Helvetica, sans-serif;
        font-size: 0.8rem;
        font-weight: 900;
        letter-spacing: 0.075em;
        /*height: 3rem;*/
        line-height: 3rem;
        padding: 0 2rem;
        text-align: center;
        text-decoration: none;
        text-transform: uppercase;
        white-space: nowrap;
    }
    .button:hover {
            box-shadow: inset 0 0 0 2px #18bfef;
            color: #18bfef !important;
    }

    a:hover {
        border-bottom-color: transparent;
    }

</style>

<div class="subtitle" style="font-size:0.85em;margin-left:15px;color:@mycolor !important;">
    <div class="subtitle" style="font-size:2em">Curious - questions - interest.</div>
    <!-- Calendly link widget begin -->
    <a href="" class="subtitle button" onclick="Calendly.initPopupWidget({url: 'https://calendly.com/dinand-dotnet/60min'});return false;">
        Meet with me</a>
    <!-- Calendly link widget end -->
    
    <div class="button subtitle" @onclick="@SiteBarShow" style="">
        Call me
        </div>
    <a class="subtitle button" target="_blank" href="https://www.secondsoft.nl/businesscard">see my Business card</a>
    <div style="clear:both; padding-bottom:10px;"></div>
    <p><a @onclick="() => Alert(message)">or contact me by <i class="fas fa-arrow-circle-down"></i></a></p>
</div>

@if (showSitebar)
{
    <_Modal Collapse="@(showSitebar?"block":"none")"></_Modal>
}

@code {
    [Parameter]
    public string mycolor { get; set; } = "black";
    string message = "You can choose from the icons below how to contact me ";
    public bool showSitebar { get; set; }
    void SiteBarShow() => showSitebar = true;
    private async Task Alert(string msg)
    {
        await JsRuntime.InvokeAsync<object>("Alert", msg);
    }
}
